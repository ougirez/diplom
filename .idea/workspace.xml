<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="ALL" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="b79ef8c8-3ce0-4bd3-ad43-7c9b78feadbb" name="Changes" comment="http, postgres">
      <change afterPath="$PROJECT_DIR$/.gitignore" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/.idea/.gitignore" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/.idea/diplom.iml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/.idea/modules.xml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Dockerfile" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Makefile" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/db/db.sql" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/docker-compose.yaml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/go.sum" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/internal/api/api.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/internal/api/binder.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/internal/api/controller/auth.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/internal/api/controller/backfill_fgbu_data.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/internal/api/controller/common.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/internal/api/controller/controller.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/internal/api/error_handler.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/internal/api/middleware.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/internal/api/validator.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/internal/domain/admin.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/internal/domain/common.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/internal/domain/crypto.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/internal/domain/region_item.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/internal/domain/types.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/internal/domain/user.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/internal/pkg/constants/context_keys.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/internal/pkg/constants/errors.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/internal/pkg/constants/jwt.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/internal/pkg/constants/requests.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/internal/pkg/helpers/helpers.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/internal/pkg/logger/logger.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/internal/pkg/store/common.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/internal/pkg/store/region.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/internal/pkg/store/store.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/internal/pkg/store/user.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/internal/pkg/utils/auth_token.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/internal/pkg/utils/cookie.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/internal/service/auth/auth_service.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/internal/service/region/region_service.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/internal/service/user/user_service.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/resources/config/config_default.yaml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmd/main.go" beforeDir="false" afterPath="$PROJECT_DIR$/cmd/main.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/go.mod" beforeDir="false" afterPath="$PROJECT_DIR$/go.mod" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="Go File" />
      </list>
    </option>
  </component>
  <component name="GOROOT" url="file:///usr/local/go" />
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="MarkdownSettingsMigration">
    <option name="stateVersion" value="1" />
  </component>
  <component name="ProjectColorInfo">{
  &quot;associatedIndex&quot;: 5
}</component>
  <component name="ProjectId" id="2emQ7sabTToVC7Yw6XvCTVWNTrG" />
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent"><![CDATA[{
  "keyToString": {
    "DefaultGoTemplateProperty": "Go File",
    "RunOnceActivity.OpenProjectViewOnStart": "true",
    "RunOnceActivity.ShowReadmeOnStart": "true",
    "RunOnceActivity.go.formatter.settings.were.checked": "true",
    "RunOnceActivity.go.migrated.go.modules.settings": "true",
    "RunOnceActivity.go.modules.go.list.on.any.changes.was.set": "true",
    "WebServerToolWindowFactoryState": "false",
    "git-widget-placeholder": "main",
    "go.import.settings.migrated": "true",
    "go.sdk.automatically.set": "true",
    "last_opened_file_path": "/Users/ilianovikov/GolandProjects/kursach/resources/config",
    "node.js.detected.package.eslint": "true",
    "node.js.selected.package.eslint": "(autodetect)",
    "settings.editor.selected.configurable": "go.vgo"
  },
  "keyToStringList": {
    "DatabaseDriversLRU": [
      "postgresql"
    ]
  }
}]]></component>
  <component name="RecentsManager">
    <key name="CopyFile.RECENT_KEYS">
      <recent name="$PROJECT_DIR$/resources/config" />
    </key>
    <key name="MoveFile.RECENT_KEYS">
      <recent name="$PROJECT_DIR$/internal/api" />
      <recent name="$PROJECT_DIR$/cmd" />
    </key>
  </component>
  <component name="RunManager" selected="Go Build.go build github.com/ougirez/kursach/cmd">
    <configuration default="true" type="GoApplicationRunConfiguration" factoryName="Go Application">
      <module name="diplom" />
      <working_directory value="$PROJECT_DIR$" />
      <kind value="FILE" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <method v="2" />
    </configuration>
    <configuration name="go build github.com/ougirez/kursach" type="GoApplicationRunConfiguration" factoryName="Go Application" temporary="true" nameIsGenerated="true">
      <module name="diplom" />
      <working_directory value="$PROJECT_DIR$" />
      <kind value="PACKAGE" />
      <package value="github.com/ougirez/kursach" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$/main.go" />
      <method v="2" />
    </configuration>
    <configuration name="go build github.com/ougirez/kursach/cmd" type="GoApplicationRunConfiguration" factoryName="Go Application" temporary="true" nameIsGenerated="true">
      <module name="diplom" />
      <working_directory value="$PROJECT_DIR$" />
      <kind value="PACKAGE" />
      <package value="github.com/ougirez/kursach/cmd" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$/cmd/main.go" />
      <method v="2" />
    </configuration>
    <configuration default="true" type="GoTestRunConfiguration" factoryName="Go Test">
      <module name="diplom" />
      <working_directory value="$PROJECT_DIR$" />
      <kind value="DIRECTORY" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <framework value="gotest" />
      <method v="2" />
    </configuration>
    <configuration default="true" type="docker-deploy" factoryName="docker-compose.yml" temporary="true">
      <deployment type="docker-compose.yml" />
      <method v="2" />
    </configuration>
    <recent_temporary>
      <list>
        <item itemvalue="Go Build.go build github.com/ougirez/kursach/cmd" />
        <item itemvalue="Go Build.go build github.com/ougirez/kursach" />
      </list>
    </recent_temporary>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
  <component name="VcsManagerConfiguration">
    <MESSAGE value="init commit" />
    <MESSAGE value="http, postgres" />
    <option name="LAST_COMMIT_MESSAGE" value="http, postgres" />
  </component>
  <component name="VgoProject">
    <environment>
      <map>
        <entry key="GOPROXY" value="https://goproxy.io,direct" />
      </map>
    </environment>
    <settings-migrated>true</settings-migrated>
  </component>
</project>